(self.webpackChunkguitarino_github_io=self.webpackChunkguitarino_github_io||[]).push([[675],{2428:(n,r,e)=>{"use strict";e.d(r,{Z:()=>l});var o=e(3517),a=e.n(o),t=e(9306),i=e(3594),s=e(6635),h=e(4870),d=e(6777);function l(n){return(0,t.h)(i.Z,a()({},n,{class:"Markdown ".concat(n.class||""),options:{overrides:{a:s.Z,pre:t.HY,code:function(n){var r=n.class&&n.class.replace(/^lang-/,"");return r?(0,t.h)(h.Z,a()({},n,{language:r,style:d.Z})):(0,t.h)("code",n)}}}}))}},9675:(n,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>s,menu:()=>i,title:()=>t});var o=e(9306),a=e(2428),t="Paranoia - Kirill Shestakov",i="blog";function s(n){return(0,o.h)(a.Z,{class:"Paranoia ".concat(n.class||"")},'# Paranoia\r\n\r\nNot gonna take my car tonight,  \r\nI\'m gonna take a walk.  \r\n*They* track my movements, left and right,  \r\nEach minute after work.\r\n\r\nNewspaper lying on the floor,  \r\nSaying, "Looking for a nanny",  \r\nThose liars, it\'s *me* they\'re looking for,  \r\n*They\'ll* have me dead and take my money.\r\n\r\nMy neighbor walking by my door,  \r\n"Hi Jim," he says in fake kind voice.  \r\nI don\'t believe his acting though,  \r\nHe\'s in with *them*, I gotta run from Illinois.\r\n\r\n"Alarm\'s been beeping at your house," he says,  \r\nI say, "I\'m gonna check it out".  \r\n*They* must be here! Oh yes, oh yes!  \r\nI\'m walking silently, it\'s *them*, no doubt!\r\n\r\nUnlocked my door, I gotta have an eyeful,  \r\nTiptoed through corridor,  \r\nAnd from a secret spot took out my rifle.  \r\nSudden knocks on my front door!\r\n\r\n"Order for..." a shout I hear,  \r\n*They* ordered me, my doom!  \r\n"Oh, wrong one, sorry sir!"  \r\nNo time to waste, I aim and... boom!\r\n\r\n*Front door is open, blood splattered on the rocks.*  \r\n*The view expanded wide, as if on a projector:*  \r\n*Old man with rifle, dead body, pizza box.*  \r\n*And loud beeping of carbon monoxide detector.*')}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ndWl0YXJpbm8uZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvTWFya2Rvd24udHN4Iiwid2VicGFjazovL2d1aXRhcmluby5naXRodWIuaW8vLi9zcmMvcGFnZXMvUGFyYW5vaWEudHN4Iiwid2VicGFjazovL2d1aXRhcmluby5naXRodWIuaW8vLi9jb250ZW50L1BhcmFub2lhLm1kIl0sIm5hbWVzIjpbIk1hcmtkb3duIiwicHJvcHMiLCJjbGFzcyIsIm9wdGlvbnMiLCJvdmVycmlkZXMiLCJhIiwiTGluayIsInByZSIsIkZyYWdtZW50IiwiY29kZSIsImxhbmd1YWdlIiwicmVwbGFjZSIsInN0eWxlIiwibW9ub2thaVN1YmxpbWUiLCJ0aXRsZSIsIm1lbnUiLCJQYXJhbm9pYSJdLCJtYXBwaW5ncyI6Im1OQU1lLFNBQVNBLEVBQVNDLEdBQ2hDLE9BQU8sT0FBQyxJQUFELE9BQXFCQSxFQUFyQixDQUE0QkMsTUFBQSxtQkFBbUJELEVBQUssT0FBTCxJQUFxQkUsUUFBUyxDQUNuRkMsVUFBVyxDQUNWQyxFQUFHQyxJQUNIQyxJQUFLQyxLQUNMQyxLQUFNLFNBQUFSLEdBQ0wsSUFBTVMsRUFBV1QsRUFBSyxPQUFVQSxFQUFLLE1BQU9VLFFBQVEsU0FBVSxJQUM5RCxPQUFJRCxHQUNJLE9BQUMsSUFBRCxPQUNGVCxFQURFLENBRU5TLFNBQVVBLEVBQ1ZFLE1BQU9DLFFBSUQsY0FBVVosVyx5R0NqQlRhLEVBQVEsOEJBRVJDLEVBQU8sT0FFTCxTQUFTQyxFQUFTZixHQUNoQyxPQUFPLE9BQUNELEVBQUEsRUFBRCxDQUFVRSxNQUFBLG1CQUFtQkQsRUFBSyxPQUFMLEtDVHJDIiwiZmlsZSI6IjY3NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZyYWdtZW50LCBoIH0gZnJvbSAncHJlYWN0JztcclxuaW1wb3J0IE1hcmtkb3duTGlicmFyeSBmcm9tICdtYXJrZG93bi10by1qc3gnO1xyXG5pbXBvcnQgTGluayBmcm9tICdAY29tcG9uZW50cy9MaW5rJztcclxuaW1wb3J0IFN5bnRheEhpZ2hsaWdodGVyIGZyb20gJ3JlYWN0LXN5bnRheC1oaWdobGlnaHRlcic7XHJcbmltcG9ydCB7IG1vbm9rYWlTdWJsaW1lIH0gZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2Rpc3QvZXNtL3N0eWxlcy9obGpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1hcmtkb3duKHByb3BzOiBhbnkpIHtcclxuXHRyZXR1cm4gPE1hcmtkb3duTGlicmFyeSB7Li4ucHJvcHN9IGNsYXNzPXtgTWFya2Rvd24gJHtwcm9wcy5jbGFzcyB8fCBgYH1gfSBvcHRpb25zPXt7XHJcblx0XHRvdmVycmlkZXM6IHtcclxuXHRcdFx0YTogTGluayxcclxuXHRcdFx0cHJlOiBGcmFnbWVudCxcclxuXHRcdFx0Y29kZTogcHJvcHMgPT4ge1xyXG5cdFx0XHRcdGNvbnN0IGxhbmd1YWdlID0gcHJvcHMuY2xhc3MgJiYgcHJvcHMuY2xhc3MucmVwbGFjZSgvXmxhbmctLywgJycpO1xyXG5cdFx0XHRcdGlmIChsYW5ndWFnZSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIDxTeW50YXhIaWdobGlnaHRlclxyXG5cdFx0XHRcdFx0XHR7Li4ucHJvcHN9XHJcblx0XHRcdFx0XHRcdGxhbmd1YWdlPXtsYW5ndWFnZX1cclxuXHRcdFx0XHRcdFx0c3R5bGU9e21vbm9rYWlTdWJsaW1lfVxyXG5cdFx0XHRcdFx0Lz47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0cmV0dXJuIDxjb2RlIHsuLi5wcm9wc30gLz47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0fSxcclxuXHR9fSAvPjtcclxufSIsImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAnQGNvbXBvbmVudHMvTWFya2Rvd24nO1xyXG5pbXBvcnQgY29udGVudCBmcm9tICdAY29udGVudC9QYXJhbm9pYS5tZCc7XHJcblxyXG5leHBvcnQgY29uc3QgdGl0bGUgPSAnUGFyYW5vaWEgLSBLaXJpbGwgU2hlc3Rha292JztcclxuXHJcbmV4cG9ydCBjb25zdCBtZW51ID0gJ2Jsb2cnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGFyYW5vaWEocHJvcHM6IHsgY2xhc3M/OiBzdHJpbmcgfSkge1xyXG5cdHJldHVybiA8TWFya2Rvd24gY2xhc3M9e2BQYXJhbm9pYSAke3Byb3BzLmNsYXNzIHx8IGBgfWB9PlxyXG5cdFx0e2NvbnRlbnR9XHJcblx0PC9NYXJrZG93bj47XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBcIiMgUGFyYW5vaWFcXHJcXG5cXHJcXG5Ob3QgZ29ubmEgdGFrZSBteSBjYXIgdG9uaWdodCwgIFxcclxcbkknbSBnb25uYSB0YWtlIGEgd2Fsay4gIFxcclxcbipUaGV5KiB0cmFjayBteSBtb3ZlbWVudHMsIGxlZnQgYW5kIHJpZ2h0LCAgXFxyXFxuRWFjaCBtaW51dGUgYWZ0ZXIgd29yay5cXHJcXG5cXHJcXG5OZXdzcGFwZXIgbHlpbmcgb24gdGhlIGZsb29yLCAgXFxyXFxuU2F5aW5nLCBcXFwiTG9va2luZyBmb3IgYSBuYW5ueVxcXCIsICBcXHJcXG5UaG9zZSBsaWFycywgaXQncyAqbWUqIHRoZXkncmUgbG9va2luZyBmb3IsICBcXHJcXG4qVGhleSdsbCogaGF2ZSBtZSBkZWFkIGFuZCB0YWtlIG15IG1vbmV5Llxcclxcblxcclxcbk15IG5laWdoYm9yIHdhbGtpbmcgYnkgbXkgZG9vciwgIFxcclxcblxcXCJIaSBKaW0sXFxcIiBoZSBzYXlzIGluIGZha2Uga2luZCB2b2ljZS4gIFxcclxcbkkgZG9uJ3QgYmVsaWV2ZSBoaXMgYWN0aW5nIHRob3VnaCwgIFxcclxcbkhlJ3MgaW4gd2l0aCAqdGhlbSosIEkgZ290dGEgcnVuIGZyb20gSWxsaW5vaXMuXFxyXFxuXFxyXFxuXFxcIkFsYXJtJ3MgYmVlbiBiZWVwaW5nIGF0IHlvdXIgaG91c2UsXFxcIiBoZSBzYXlzLCAgXFxyXFxuSSBzYXksIFxcXCJJJ20gZ29ubmEgY2hlY2sgaXQgb3V0XFxcIi4gIFxcclxcbipUaGV5KiBtdXN0IGJlIGhlcmUhIE9oIHllcywgb2ggeWVzISAgXFxyXFxuSSdtIHdhbGtpbmcgc2lsZW50bHksIGl0J3MgKnRoZW0qLCBubyBkb3VidCFcXHJcXG5cXHJcXG5VbmxvY2tlZCBteSBkb29yLCBJIGdvdHRhIGhhdmUgYW4gZXllZnVsLCAgXFxyXFxuVGlwdG9lZCB0aHJvdWdoIGNvcnJpZG9yLCAgXFxyXFxuQW5kIGZyb20gYSBzZWNyZXQgc3BvdCB0b29rIG91dCBteSByaWZsZS4gIFxcclxcblN1ZGRlbiBrbm9ja3Mgb24gbXkgZnJvbnQgZG9vciFcXHJcXG5cXHJcXG5cXFwiT3JkZXIgZm9yLi4uXFxcIiBhIHNob3V0IEkgaGVhciwgIFxcclxcbipUaGV5KiBvcmRlcmVkIG1lLCBteSBkb29tISAgXFxyXFxuXFxcIk9oLCB3cm9uZyBvbmUsIHNvcnJ5IHNpciFcXFwiICBcXHJcXG5ObyB0aW1lIHRvIHdhc3RlLCBJIGFpbSBhbmQuLi4gYm9vbSFcXHJcXG5cXHJcXG4qRnJvbnQgZG9vciBpcyBvcGVuLCBibG9vZCBzcGxhdHRlcmVkIG9uIHRoZSByb2Nrcy4qICBcXHJcXG4qVGhlIHZpZXcgZXhwYW5kZWQgd2lkZSwgYXMgaWYgb24gYSBwcm9qZWN0b3I6KiAgXFxyXFxuKk9sZCBtYW4gd2l0aCByaWZsZSwgZGVhZCBib2R5LCBwaXp6YSBib3guKiAgXFxyXFxuKkFuZCBsb3VkIGJlZXBpbmcgb2YgY2FyYm9uIG1vbm94aWRlIGRldGVjdG9yLipcIjsiXSwic291cmNlUm9vdCI6IiJ9